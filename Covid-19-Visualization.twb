<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Covid-19-Visualization' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='color' value='#000000' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Sheet1 (Covid-19-Visualization)' inline='true' name='federated.00yabj1175yigu16sg0x51a45i2g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2)' name='google-sheets.1qhqeu60vjbwz011unxp61dxuiak'>
            <connection class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='' googleSheetId='1Z28CHo8pkm4MxqecRPyNJL47Kgxv7Anu78SnDSR_tRc' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server-oauth='' username='unnati.palan@gmail.com' validate='no' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.1qhqeu60vjbwz011unxp61dxuiak' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Province_State' ordinal='0' />
            <column datatype='string' name='Country_Region' ordinal='1' />
            <column datatype='real' name='Lat' ordinal='2' />
            <column datatype='real' name='Long' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking' datatype='integer' name='[Calculation_1630584579616432128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Confirmed]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country_Region,MDY(Date))' hidden='true' name='[Action (Country_Region,MDY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Region]' />
          <groupfilter function='level-members' level='[md:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Top 5' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Confirmed])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Unnati/Documents/My Tableau Repository/Datasources/Sheet1 (Covid-19-Visualization).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2020 05:33:23 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Covid-19-Visualization)' increment-value='%null%' refresh-type='create' rows-inserted='21708' timestamp-start='2020-04-12 17:33:23.080' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Province_State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province_State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province_State</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Region</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>346</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>352</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>526</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.323246' group-percentage='0.196699' measure-ordering='alphabetic' measure-percentage='0.480055' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country_Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States Minor Outlying Islands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated) 1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='COVID-19 Across World' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Total Cases by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated) 1' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Top Affected Countries by Death' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='COVID-19 Across World'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontsize='20'>COVID-19 Across the World on </run>
            <run bold='true' fontcolor='#e6e6e6' fontsize='20'>&lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid-19-Visualization)' name='federated.00yabj1175yigu16sg0x51a45i2g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00yabj1175yigu16sg0x51a45i2g'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[md:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)]' field-type='quantitative' fold='true' max='15061042.586823475' min='-15140490.447022039' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)]' field-type='quantitative' max='15061042.586823475' min='-15140490.447022039' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00yabj1175yigu16sg0x51a45i2g].[Latitude (generated)]' field-type='quantitative' max='14934725.648692954' min='-6166135.3274521017' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' palette='orange_gold_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' value='Total Deaths '>
              <formatted-text>
                <run>Total Deaths </run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' value='Total Confirmed Cases'>
              <formatted-text>
                <run>Total Confirmed Cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Date' />
          </style-rule>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-duration' value='0.30000001192092896' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <lod column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <color column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' />
              <geometry column='[federated.00yabj1175yigu16sg0x51a45i2g].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-field' value='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-transparency' value='201' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
              <size column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
              <lod column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='6'>&lt;</run>
                <run fontsize='6'>[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]</run>
                <run fontsize='6'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.8176796436309814' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00yabj1175yigu16sg0x51a45i2g].[Latitude (generated)]</rows>
        <cols>([federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)] + [federated.00yabj1175yigu16sg0x51a45i2g].[Longitude (generated)])</cols>
        <pages>
          <column>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{283D4515-53BA-4549-8D30-324DD5083E14}' />
    </worksheet>
    <worksheet name='Recovered Cases by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='10'>Recovered Cases by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid-19-Visualization)' name='federated.00yabj1175yigu16sg0x51a45i2g' />
          </datasources>
          <datasource-dependencies datasource='federated.00yabj1175yigu16sg0x51a45i2g'>
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[md:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' />
              <color column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{0C510677-FC0B-48BA-828A-9501754B5AD6}' />
    </worksheet>
    <worksheet name='Top Affected Countries by Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='10'>Top Affected Countries by Death </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid-19-Visualization)' name='federated.00yabj1175yigu16sg0x51a45i2g' />
          </datasources>
          <datasource-dependencies datasource='federated.00yabj1175yigu16sg0x51a45i2g'>
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[md:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
              <size column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
              <lod column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</column>
        </pages>
        <page-trail-options mark-color='#e15759' start='57' trail-effect='none' />
      </table>
      <simple-id uuid='{F1B29352-185F-47AA-B0E5-DB3016BCE299}' />
    </worksheet>
    <worksheet name='Total Cases by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='10'>Total Confirmed Cases by Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid-19-Visualization)' name='federated.00yabj1175yigu16sg0x51a45i2g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00yabj1175yigu16sg0x51a45i2g'>
            <column caption='Ranking' datatype='integer' name='[Calculation_1630584579616432128]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Confirmed]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1630584579616432128]' derivation='User' name='[usr:Calculation_1630584579616432128:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.00yabj1175yigu16sg0x51a45i2g].[Country_Region]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[md:Date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00yabj1175yigu16sg0x51a45i2g].[Action (Country_Region,MDY(Date))]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00yabj1175yigu16sg0x51a45i2g].[usr:Calculation_1630584579616432128:ok:1]' value='36' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
              <text column='[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00yabj1175yigu16sg0x51a45i2g].[usr:Calculation_1630584579616432128:ok:1]</rows>
        <cols>[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]</cols>
        <pages>
          <column>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{EEEADF0B-0EA4-4877-B5CA-01B8A00E90DF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='950' maxwidth='1654' minheight='950' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98316' id='7' param='horz' type='layout-flow' w='99032' x='484' y='842'>
            <zone h='98316' id='5' type='layout-basic' w='78173' x='484' y='842'>
              <zone h='98316' id='3' name='COVID-19 Across World' w='78173' x='484' y='842'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='345' h='98316' id='6' is-fixed='true' param='vert' type='layout-flow' w='20859' x='78657' y='842'>
              <zone count='3' h='12105' id='10' name='COVID-19 Across World' name1='Top Affected Countries by Death' name2='Total Cases by Country' name3='Recovered Cases by Country' synchronized='1' type='currpage' w='20859' x='78657' y='842'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='299' h='32316' id='11' is-fixed='true' name='Top Affected Countries by Death' w='20859' x='78657' y='12947'>
                <layout-cache fixed-size-w='263' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='26737' id='12' name='Total Cases by Country' w='20254' x='78537' y='47474'>
          <layout-cache fixed-size-h='5459' minwidth='180' type-h='fixed' type-w='scalable' />
        </zone>
        <zone h='5789' id='8' name='COVID-19 Across World' pane-specification-id='2' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' type='color' w='14631' x='47823' y='1579' />
        <zone fixed-size='78' h='4876' id='9' is-fixed='true' name='COVID-19 Across World' pane-specification-id='1' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' type='color' w='14450' x='63603' y='1454' />
        <zone h='24105' id='17' name='Recovered Cases by Country' w='21040' x='79444' y='76421'>
          <layout-cache fixed-size-h='244' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98316' id='24' param='vert' type='layout-flow' w='99032' x='484' y='842'>
                <zone fixed-size='280' h='98316' id='3' is-fixed='true' name='COVID-19 Across World' w='78173' x='484' y='842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5789' id='8' name='COVID-19 Across World' pane-specification-id='2' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' type='color' w='14631' x='47823' y='1579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='4876' id='9' name='COVID-19 Across World' pane-specification-id='1' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' type='color' w='14450' x='63603' y='1454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32316' id='11' is-fixed='true' name='Top Affected Countries by Death' w='20859' x='78657' y='12947'>
                  <layout-cache fixed-size-w='263' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='26737' id='12' is-fixed='true' name='Total Cases by Country' w='20254' x='78537' y='47474'>
                  <layout-cache fixed-size-h='5459' minwidth='180' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='229' h='24105' id='17' is-fixed='true' name='Recovered Cases by Country' w='21040' x='79444' y='76421'>
                  <layout-cache fixed-size-h='244' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='3' h='12105' id='10' name='COVID-19 Across World' name1='Top Affected Countries by Death' name2='Total Cases by Country' name3='Recovered Cases by Country' synchronized='1' type='currpage' w='20859' x='78657' y='842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{40AB00A1-5913-4609-AA84-5480626426E1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.14583' source-height='32'>
    <window class='worksheet' name='COVID-19 Across World'>
      <cards>
        <edge name='left'>
          <strip size='156'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='27'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20200411</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1606304F-98D3-4ADA-A1A8-D4EA504A759D}' />
    </window>
    <window class='worksheet' name='Top Affected Countries by Death'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='currpage' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20200411</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D1C2F30-4050-4455-874E-30BD4E7B963C}' />
    </window>
    <window class='worksheet' name='Recovered Cases by Country'>
      <cards>
        <edge name='left'>
          <strip size='157'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20200411</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Recovered:qk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84255135-09A0-4567-8675-59628F8333B2}' />
    </window>
    <window class='worksheet' name='Total Cases by Country'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>20200411</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.00yabj1175yigu16sg0x51a45i2g].[sum:Confirmed:qk]</axis>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>20200411</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[:Measure Names]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[Set 1]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[io:Set 1:nk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[md:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Country_Region:nk]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[none:Date:ok]</field>
            <field>[federated.00yabj1175yigu16sg0x51a45i2g].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2BC9A34-4A91-4B61-B5F6-EB3962207D15}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='COVID-19 Across World'>
          <current-page>
            <multibucket>
              <bucket>20200411</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Recovered Cases by Country'>
          <current-page>
            <multibucket>
              <bucket>20200411</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Top Affected Countries by Death'>
          <current-page>
            <multibucket>
              <bucket>20200411</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Total Cases by Country'>
          <current-page>
            <multibucket>
              <bucket>20200411</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{AEF5FE1F-7886-4166-9EAC-244F5EE9016F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID-19 Across World' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Recovered Cases by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABDqAAAQ6gGC0wqY
      AAALAklEQVR4nO3d624bZ37H8e8cOBxyeNaBkqW1HCWyNwmKTYICu28WBYq+6l30JopeQ1/0
      AnohfVOg2EXRBF1smmS9jq2sD4ocyTpRPIjnmeHTF0qC9Zqxs4FI2np+H8AwRIrG38B8Nc8z
      PMgxxhhELOUDRFFEHMeLnkVk7nyAOI4VgFjJ//Mv/vvf/w2nebyoWeQa8bI5lv8+JBm93sfT
      cwF4rROS/a8WNYtcI24+IueXGMePFz3KS7mLHkBkkfxpNx51+hx2eoQZj81yAQOEvscwSSgG
      Ae3hmEouwHGcOY8rb6JHe11ubuQZxxPi2BBFHt1uQrmUwXUXewxNDeC42+fDjWU+/eaU+8dN
      woyHMeA4kMv4fH5wxi+36mxVi/OeV95AJ6cjHu31+Pk7Rf7ztyfcfruA5zmsr4a8tRUtdLap
      S6DAc/n88Iww43GjHOEAWd/lVrXESbfPzWqBcZLOeVR5U313sEd5nyjvAbCzfbmyWDTHGGOC
      ICCOYz7+138h+Xp30TPJNeDnI27+U4nxQJtgkdfW1D3Ao0abk+6AeiHPSbfP+2s1AHZPWqyX
      Io4v+uQyPsMkIet7vFevzXVoebMkyYS79zvc3Mxz3hyzs13gq0cX9Acpv3i/zKdftFivh5f7
      hJ0iq8vZuc02NYDtWonuKOatWpHuKCYKMhy2e/TGMXGacqMcgYF8EHHWG85tWHnzGGP4w702
      EwMZ3+G0MWJnu8DTgwG9foLrOHQuYv72gyqnZyMqpcxc55u6BDrtDVnKh/TGCWHGI04ntIdj
      qrksgzjhWadPvZhj77yjK0HySukEdh9e0O7EHB0P6VzEbN+KyAYergsHR0POGiMMEATzXZVP
      3QSnkwmu43y/Sz/rDqhFIaMkJZ/xSY3Bd12SyQTf1TZCXvSXm+A0NYzjCWlqaLbGl8scB7KB
      R5oaHAeMubxiNNc5p93ofXtQfzfKajF/+c3f1ul/+wSYDn75sTzPIeddXgItRP4L9y2KjmCx
      mgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKsp
      ALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQ
      qykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGa
      AhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQq/l/
      /kX+xhZOkFnULHKNeGEO+GbRY7zScwHUN59QWH2wqFnkOvELtKkseopX0hJIrPZXBdAfpqQT
      M6tZRObOn3bjbz47JfBd6rWQk+aQnZ8V2P26y/ZGxKRreHLY46PbFfLh1IeLvDGmHsG31iO+
      fNJhYuBmPce9Jx1OW2P6o5Ri3uf2z4rsHw/4+VZx3vOKXKmpAVz0Y6Kcx2CU8vCgx42lkHFs
      WKtliXI+Uc4jnehqkbz5pgbwN9tlAE5bI1YqWYAXftpHWv7INfDSTfB3B7/IdTX1x/j/fnmO
      MeC5Do32iL/7cIWJMfzHJ0f846/W+K//O6Vey3LeGbNWC/lg5/W/3isyzdQzQC7r0erGTIxh
      FE84aY6IQp96NWTvqM+vf7FMd5DgOg5PTwbznlnkykwNwPccPNdhuZwll/VwHXjWGLJ/3CfI
      uHx8t8HmSp4w67GzWZj3zCJXxjHGmCAIiOOYZ7/5ZwrjF18K0R0kFHLa9MpfwS/QXqswHjxe
      9CQv9aOeCdbBL9eVXgskVlMAYjUFIFZTAGI1BSBWUwBiNV3flJlx3BDHzS96jJdSADIzuxe3
      6PRe7xdUKgCZmXb3gPPO/qLHeCntAcRqOgPIzN37/IhCMWBpJWI4TEjilFIlpNUYsHqjyPFB
      h1I1RzxOqS3Pd8+gM4DM3LAf47oOX35xhOc57P7xhMdfNRiPE+5/cUSpEnL300N27x7PfTad
      AWTm6htFNrcqOK7DZGIoFLOXf0pZjIGD/TalSkiYm//7zBWAzNzmVuW5v5dWou/vW16Npj5m
      XrQEEqvpDCAzZYxh/3GTQT+mupSn3xvz1s4SRwcdehdjKks5zo57LK9GPDvo8NY7NaLi/J47
      0BlAZm5l7fJts0+fNEnTCcYYnu61GA0T9h6ek8QpYc5n2I9JkslcZ1MAMnOffvIU33ep1HJM
      JoZOa0ilmmM4TCiVQ+I45fhZl2zoMx6lc51NSyCZKcdx+PU/vP3cbe3mgJ33VhY00fN0BpC5
      K1dzix7hewpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYA
      xGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEas99Mpxb2sI1+rA4uQJ+Ds67
      i57ilZ472tPuHmn8YFGzyHXiF4Cbi57ilbQEEqtNXe88Puyxf9Tng50K3UHCSiWg00/IeA6D
      0YSJMVQKGdrdmEox4LwzplrMkM24TAwEGXUlb4apARw1htRrIV8f9fn4boPN1RwZ38X3HJoX
      MbVihvpSyG8/O+PdrSJh4PLowJDNuLx7q6gA5I0xNYAw8Pj6qM9SOWBzNcfWWp6lckCjPaaQ
      9ymEHs3OmLValmLks1rNEvgun/yxwS/fr877/yDyk00N4KM7lanfvLHywx9rfXw+5MPbFRzH
      uZrJRObgyq551mvhVf1TInMzNYD7exe0uzFL5YBHBz1+9X6VciHD7++3uLNV4Hf3mry3XeTh
      0x6bqzm2Nxb7qy5Ffqqpu9Xz9pg4mbC9EVGOfEpRhpPmiLP2iM//1ObDOxU+222zWsty2hrN
      e2aRKzM1gGopw3kn5vh8RCHvMxilDEYTBsMUB/ifPzSoljI82LsgTsycRxa5OlOXQO/eKvLu
      rSIA60tZnjVG3Kzn2Fp7fX63k8hVmBrAX17JubGsDa5cT3rGSqymAMRqCkCspgDEagpArKYA
      xGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymj4GTmYlyyyTpeNFjvJQCkJnZbRV41iwteoyX
      UgAyM53BBa1+e9FjvJT2ALIQaZL+4H3GGCbpZOp9P3T7T6UzgMyUMYaDB9+QyWYor5ZJ4hQ/
      8Bn1hhw9PKS+vU6v1aO6XmXYG5Ir5hkPRoz6IzBQWi3TbVwQFkLSOKVxcMb2R+9c2XwKQGYu
      yAWMB2OaR02SUUyQCwCHylqN0mqZYXfA4VcHmInBz2bYuLPJqDek3+kzuOjjZTziUQwY8uWr
      /QgeBSAzZyYTMIYgDHBdl7CYY5Kk9Fpdjv50SDJOLg9sYwiLOfysjx9kAMhGIdl8FoDu+QWO
      e7WrdgUgM+U4DvXt9an3VddrP/i42sYStY2lH/39P5U2wWI1nQFk5hoHZ5iJwXVdRoMRa2+v
      0zltM+wOyYQZLhodyisVWsdNbtzeIMhl5zabzgAyc+WVCuPhmKhWwPUuD7lCrUgSJwy7Q5Y2
      ljnZO+bGnU0uGhdznU0ByEwZYzg/bNA+bvHNvX0w0Gt2aR+3aB83cT2X0/1TqjdqHDx4euVX
      eV5FSyCZKcdxWL1VZ/VW/fvbht0BhVrxhU3uys3VeY+nM4DMX1h4fT5jVgGI1RSAWE0BiNUU
      gFhNAYjVFIBYTQGI1RSAWE0BiNUUgFhNAYjVFIBYTQGI1RSAWE0BiNWee0OMV9jCM5lFzSLX
      iZ9jy71JlM0vepKX+n8OfFf+L+R5xQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Affected Countries by Death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Cases by Country' width='192'>
      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
      gvwmzgL/PxFAV7WfPSnoAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
